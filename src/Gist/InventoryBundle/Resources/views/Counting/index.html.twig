{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form_tools %}
{% block content %}
    <!-- CONTENT -->
    <form method="post" class="form-horizontal" id="counting_form">
        <div class="row">
            <div class="col-12">
                <h2 class="page-title">Counting</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <ul class="nav nav-pills nav-pills-v1 mb-3" id="pills-tab" role="tablist">
                    <li class="nav-item">
                        <a aria-controls="pills-home" aria-selected="false" class="nav-link" data-toggle="pill" href="#pills-home" id="pills-home-tab" role="tab">Submitted Counting Forms</a>
                    </li>
                    <li class="nav-item">
                        <a aria-controls="pills-profile" aria-selected="true" class="nav-link active" data-toggle="pill" href="#pills-profile" id="pills-profile-tab" role="tab">Counting</a>
                    </li>
                </ul>
                <div class="tab-content" id="pills-tabContent">
                    <!-- SUBMITTED COUTING FORMS -->
                    <div aria-labelledby="pills-home-tab" class="tab-pane fade" id="pills-home" role="tabpanel">
                        <div class="table-responsive table-v1">
                            <table class="table table-bordered" data-data-table="true" id="summary_table" style="width:100%">
                                <thead>
                                <tr>
                                    <th style="width: 10%">ID</th>
                                    <th style="width: 50%">Submitted By</th>
                                    <th style="width: 25%">Date</th>
                                    <th style="width: 15%">Status</th>
                                </tr>
                                </thead>
                                <tbody>
                                {% for s in submissions %}
                                    <tr>
                                        <td>{{ s.id }}</td>
                                        <td>{{ s.submitted_by }}</td>
                                        <td>{{ s.date_create }}</td>
                                        {#<td>{{ s.type }}</td>#}
                                        <td>{{ s.status }}</td>
                                        {#<td></td>#}
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- COUNTING -->
                    <div aria-labelledby="pills-profile-tab" class="tab-pane fade show active" id="pills-profile" role="tabpanel">
                        {#<form action="" id="form--counting" name="form--counting">#}
                        <input type="hidden" id="sysCountVisibility" value="{{ sysCountVisibility }}">
                        <input type="hidden" id="countingRule" value="{{ counting_rule }}">
                        <div class="table-responsive table-v1" data-has_submit="true">
                            {% if form_disabled %}
                                <div class="note note-warning">
                                    <h4 class="block">Form disabled!</h4>
                                    <p> <strong>{{ detected_submission_timeslot }}</strong> count already submitted. Please wait for the next time slot. </p>
                                </div>
                            {% endif %}
                            <table class="table table-bordered" data-data-table="true" id="counting_table" style="width:100%">
                                <thead>
                                <tr>
                                    <th style="width: 15%">Item Code</th>
                                    <th style="width: 35%">Item Name</th>
                                    {% if sysCountVisibility == '3' %}
                                        <th style="width: 15%">Current Stock</th>
                                    {% endif %}
                                    <th style="width: 15%">Count</th>
                                    {% if sysCountVisibility == '3' %}
                                        <th style="width: 15%">+/-</th>
                                        <th style="width: 5%"></th>
                                    {% endif %}
                                </tr>
                                </thead>
                                <tbody>
                                {% for s in form_fields %}
                                    <tr>
                                        <input type="hidden" name="product_id[]" value="{{ s.product_id }}">
                                        <td>{{ s.item_code }}</td>
                                        <td>{{ s.item_name }}</td>
                                        {% if sysCountVisibility == '3' %}
                                            <td><input type="number" step="1" class="existingCount" name="existingCount[]" value="{{ s.current_stock|default('')|replace({".00" : ""}) }}" readonly></td>
                                        {% else %}
                                            <input type="hidden" class="existingCount" value="{{ s.current_stock|default('')|replace({".00" : ""}) }}" name="existingCount[]">
                                        {% endif %}
                                        <td><input type="number" step="1" min="0" class="currentCount" name="currentCount[]" value="{{ s.current_stock|default('')|replace({".00" : ""}) }}" {{ form_disabled ? 'disabled ' : '' }}></td>
                                        {% if sysCountVisibility == '3' %}
                                            <td><input type="text" class="diffCount" name="diffCount[]" value="+0" readonly></td>
                                            <td class="text-center"><i class="fa fa-check rowMarker"></i></td>
                                        {% else %}
                                            <input type="hidden" class="diffCount" value="x" name="diffCount[]">
                                        {% endif %}
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                            <button type="submit" class="btn blue" id="submit_counts"><i class="fa fa-save"></i> Submit</button>
                        </div>
                        {#</form>#}
                    </div>
                </div>
            </div>
        </div>
    </form>
{% endblock %}

{% block modal %}
    <div aria-hidden="true" class="modal modal--v1 fade" id="discr_modal_alert" role="dialog" tabindex="-1">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form method="post" action="">
                    <div class="modal-header">
                        <h5 class="modal-title" id="form_title">Discrepancy detected!</h5>
                        <button aria-label="Close" class="close" data-dismiss="modal" type="button"><span aria-hidden="true">&times;</span></button>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-v1 btn-small btn-primary" id="recountBtn" type="button">Recount</button>
                        <button class="btn btn-v1 btn-small btn-success" id="continueBtn" type="button">Continue</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{% block js %}
    <script>
        $(document).ready(function() {
            var flag_discrepancy = false;
            var flag_form_valid = false;
            var sysCountVisibility = $('#sysCountVisibility').val();
            var countingRule = $('#countingRule').val();

            path = "{{ path('gist_inv_damaged_items_summary_ajax_grid') }}";

            $('#recountBtn').on('click', function() {
                if (sysCountVisibility == '2') {
                    toastr['warning']('Recount stocks then submit form again!');
                } else {
                    toastr['warning']('Fix highlighted rows. Check all pages.');
                }
                $('#discr_modal_alert').modal('hide');
            });

            $('#continueBtn').on('click', function() {
                var $form = $('#counting_form');
                var counting_table;
                counting_table = $('#counting_table').dataTable();

                counting_table.$('input[name^="product_id"]').each(function(){
                    if(!$.contains(document, this)){
                        $form.append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });

                counting_table.$('input[name^="currentCount"]').each(function(){
                    if(!$.contains(document, this)){
                        $form.append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });

                counting_table.$('input[name^="existingCount"]').each(function(){
                    if(!$.contains(document, this)){
                        $form.append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });

                $('#counting_form').submit();
            });

            var summTable;
            summTable = $('#summary_table').dataTable({
                "bProcessing": true,
                "bServerSide": false,
                //"sAjaxSource": path,
                "iDisplayLength": 10,
                "bInfo": false,
                // "bSort" : false,
                // "bLengthChange": false,
                // "sPaginationType": "bootstrap",
                "oLanguage": {
                    "sLengthMenu": "_MENU_ records",
                    "oPaginate": {
                        "sPrevious": "<span class=\"prev-icon\"><i class=\"fas fa-chevron-left\"></i></span>",
                        "sNext": "<span class=\"next-icon\"><i class=\"fas fa-chevron-right\"></i></span>"
                    }
                },
                "aoColumnDefs": [
                    { "bSortable": false, "aTargets": [3] },
                ],
                "aaSorting": [[0,'desc']]
            });

            var counting_table;
            counting_table = $('#counting_table').dataTable({
                "bProcessing": true,
                "bServerSide": false,
                "iDisplayLength": 10,
                "bFilter" : false,
                "bInfo" : false,
                // "bSort" : false,
                // "bLengthChange": false,
                // "sPaginationType": "bootstrap",
                "fnDrawCallback": function( oSettings ) {
                    $('.currentCount').on('keyup', function(e) {
                        var tr = $(this).closest('tr');
                        var existingCount = tr.find('.existingCount').val();
                        var currentCountInt = parseInt(this.value);
                        var rowMarker = tr.find('.rowMarker');
                        var diffCount = tr.find('.diffCount');

                        if (countingRule == 'all') {
                            if (this.value != '') {
                                if (this.value != existingCount && this.value != '-'  && this.value != '+' && this.value != 'e') {
                                    if (sysCountVisibility == '3' || sysCountVisibility == '2') {
                                        flag_discrepancy = true;
                                        if (sysCountVisibility == '3') {
                                            tr.css("background-color", "yellow");
                                            rowMarker.removeClass('fa-check');
                                            rowMarker.addClass('fa-times');
                                        } else {
                                            tr.css("background-color","");
                                        }
                                    } else {
                                        tr.css("background-color","");
                                    }
                                } else {
                                    tr.css("background-color","");
                                    rowMarker.addClass('fa-check');
                                    rowMarker.removeClass('fa-times');
                                }

                                var count = parseInt(tr.find('.currentCount').val());
                                var sys = parseInt(tr.find('.existingCount').val());
                                var diff = Math.abs(sys - count);
                                if (sys > count) {
                                    diffCount.val('-'+diff);
                                } else {
                                    diffCount.val('+'+diff);
                                }

                                if (currentCountInt < 0) {
                                    var tr = $(this).closest('tr');
                                    tr.css("background-color","#ff5959");
                                    rowMarker.removeClass('fa-check');
                                    rowMarker.addClass('fa-times');
                                    diffCount.val('+0');
                                }
                            } else {
                                var tr = $(this).closest('tr');
                                tr.css("background-color","#ff5959");
                                rowMarker.removeClass('fa-check');
                                rowMarker.addClass('fa-times');
                                diffCount.val('+0');

                            }
                        } else {
                            if (this.value != existingCount && this.value != '-'  && this.value != '+' && this.value != 'e' && this.value != '') {
                                if ((sysCountVisibility == '3' || sysCountVisibility == '2') && this.value != '') {
                                    flag_discrepancy = true;
                                    if (sysCountVisibility == '3') {
                                        tr.css("background-color", "yellow");
                                        rowMarker.removeClass('fa-check');
                                        rowMarker.addClass('fa-times');
                                    } else {
                                        tr.css("background-color","");
                                    }
                                } else {
                                    tr.css("background-color","");
                                }

                                var count = parseInt(tr.find('.currentCount').val());
                                var sys = parseInt(tr.find('.existingCount').val());
                                var diff = Math.abs(sys - count);
                                if (sys > count) {
                                    diffCount.val('-'+diff);
                                } else {
                                    diffCount.val('+'+diff);
                                }
                            } else {
                                tr.css("background-color","");
                                rowMarker.addClass('fa-check');
                                rowMarker.removeClass('fa-times');
                                diffCount.val('+0');
                            }

                            if (currentCountInt < 0) {
                                var tr = $(this).closest('tr');
                                tr.css("background-color","#ff5959");
                                rowMarker.removeClass('fa-check');
                                rowMarker.addClass('fa-times');
                                diffCount.val('+0');
                            }
                        }
                    });
                },
                "oLanguage": {
                    "sLengthMenu": "_MENU_ records",
                    "oPaginate": {
                        "sPrevious": "<span class=\"prev-icon\"><i class=\"fas fa-chevron-left\"></i></span>",
                        "sNext": "<span class=\"next-icon\"><i class=\"fas fa-chevron-right\"></i></span>"
                    }
                },
                "aoColumnDefs": [
                    { "bSortable": false, "aTargets": [5] },
                ],
            });

            $('#submit_counts').on('click', function(e){
                var $form = $('#counting_form');
                flag_discrepancy = false;
                flag_form_valid = true;

                $(counting_table.fnGetNodes()).each(function(){
                    var tr = $(this).closest('tr');
                    var currentCount = tr.find('.currentCount');
                    var tr = $(this).closest('tr');
                    var existingCount = tr.find('.existingCount').val();
                    var currentCountInt = parseInt(tr.find('.currentCount').val());

                    if (countingRule == 'all') {
                        if (currentCount.val() == ''  || currentCountInt < 0) {
                            tr.css("background-color", "#ff5959");
                            flag_form_valid = false;
                        } else if (currentCount.val() != existingCount) {
                            if (sysCountVisibility == '3' || sysCountVisibility == '2') {
                                flag_discrepancy = true;
                                if (sysCountVisibility == '3') {
                                    tr.css("background-color", "yellow");
                                }
                            } else {
                                tr.css("background-color", "");
                            }
                        }
                    } else {
                        //selective
                        if (currentCountInt < 0) {
                            tr.css("background-color", "#ff5959");
                            flag_form_valid = false;
                        } else if (currentCount.val() != existingCount) {
                            if ((sysCountVisibility == '3' || sysCountVisibility == '2') && currentCount.val() != '') {
                                flag_discrepancy = true;
                                if (sysCountVisibility == '3') {
                                    tr.css("background-color", "yellow");
                                }
                            } else {
                                tr.css("background-color", "");
                            }
                        }
                    }
                });

                if (!flag_discrepancy && flag_form_valid) {

                } else {
                    if (!flag_form_valid) {
                        toastr['error']('Please check highlighted rows on all pages!');
                        e.preventDefault();
                        return false;
                    }

                    if (flag_discrepancy) {
                        $('#discr_modal_alert').modal('show');
                        e.preventDefault();
                        return false;
                    } else {
                        toastr['error']('Please check highlighted rows on all pages!');
                        e.preventDefault();
                        return false;
                    }
                }

                counting_table.$('input[name^="product_id"]').each(function(){
                    if(!$.contains(document, this)){
                        $form.append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });

                counting_table.$('input[name^="currentCount"]').each(function(){
                    if(!$.contains(document, this)){
                        $form.append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });

                counting_table.$('input[name^="existingCount"]').each(function(){
                    if(!$.contains(document, this)){
                        $form.append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });

            });

            $('.currentCount').on('keyup', function(e) {
                var tr = $(this).closest('tr');
                var existingCount = tr.find('.existingCount').val();
                var currentCountInt = parseInt(this.value);
                var rowMarker = tr.find('.rowMarker');
                var diffCount = tr.find('.diffCount');

                if (countingRule == 'all') {
                    if (this.value != '') {
                        if (this.value != existingCount && this.value != '-'  && this.value != '+' && this.value != 'e') {
                            if (sysCountVisibility == '3' || sysCountVisibility == '2') {
                                flag_discrepancy = true;
                                if (sysCountVisibility == '3') {
                                    tr.css("background-color", "yellow");
                                    rowMarker.removeClass('fa-check');
                                    rowMarker.addClass('fa-times');
                                } else {
                                    tr.css("background-color","");
                                }
                            } else {
                                tr.css("background-color","");
                            }
                        } else {
                            tr.css("background-color","");
                            rowMarker.addClass('fa-check');
                            rowMarker.removeClass('fa-times');
                        }

                        var count = parseInt(tr.find('.currentCount').val());
                        var sys = parseInt(tr.find('.existingCount').val());
                        var diff = Math.abs(sys - count);
                        if (sys > count) {
                            diffCount.val('-'+diff);
                        } else {
                            diffCount.val('+'+diff);
                        }

                        if (currentCountInt < 0) {
                            var tr = $(this).closest('tr');
                            tr.css("background-color","#ff5959");
                            rowMarker.removeClass('fa-check');
                            rowMarker.addClass('fa-times');
                            diffCount.val('+0');
                        }
                    } else {
                        var tr = $(this).closest('tr');
                        tr.css("background-color","#ff5959");
                        rowMarker.removeClass('fa-check');
                        rowMarker.addClass('fa-times');
                        diffCount.val('+0');

                    }
                } else {
                    if (this.value != existingCount && this.value != '-'  && this.value != '+' && this.value != 'e' && this.value != '') {
                        if ((sysCountVisibility == '3' || sysCountVisibility == '2') && tr.find('.currentCount').val() != '') {
                            flag_discrepancy = true;
                            if (sysCountVisibility == '3') {
                                tr.css("background-color", "yellow");
                                rowMarker.removeClass('fa-check');
                                rowMarker.addClass('fa-times');
                            } else {
                                tr.css("background-color","");
                            }
                        } else {
                            tr.css("background-color","");
                        }

                        var count = parseInt(tr.find('.currentCount').val());
                        var sys = parseInt(tr.find('.existingCount').val());
                        var diff = Math.abs(sys - count);
                        if (sys > count) {
                            diffCount.val('-'+diff);
                        } else {
                            diffCount.val('+'+diff);
                        }
                    } else {
                        tr.css("background-color","");
                        rowMarker.addClass('fa-check');
                        rowMarker.removeClass('fa-times');
                        diffCount.val('+0');
                    }

                    if (currentCountInt < 0) {
                        var tr = $(this).closest('tr');
                        tr.css("background-color","#ff5959");
                        rowMarker.removeClass('fa-check');
                        rowMarker.addClass('fa-times');
                        diffCount.val('+0');
                    }
                }
            });

        });
    </script>
{% endblock %}